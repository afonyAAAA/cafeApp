﻿
////////////////TABLES//////////////

CREATE TABLE IF NOT EXISTS "public"."User"
(
 user_id     serial NOT NULL,
 login       varchar(50) NOT NULL,
 password    varchar(50) NOT NULL,
 firstName   varchar(100) NOT NULL,
 secondName  varchar(100) NOT NULL,
 surname     varchar(100) NOT NULL,
 document_id int NULL,
 role_id     int NOT NULL,
 isFired     bool NOT NULL default false,
 CONSTRAINT PK_user PRIMARY KEY ( user_id ),
 CONSTRAINT FK_document FOREIGN KEY ( document_id ) REFERENCES "public".Document ( document_id ),
 CONSTRAINT FK_role FOREIGN KEY ( role_id ) REFERENCES "public".Role ( role_id )
);


CREATE TABLE IF NOT EXISTS "public".Document
(
 document_id  serial NOT NULL,
 contractLink text NOT NULL,
 photoLink    text NOT NULL,
 CONSTRAINT PK_document PRIMARY KEY ( document_id )
);

CREATE TABLE IF NOT EXISTS "public".Role
(
 role_id serial NOT NULL,
 name    varchar(50) NOT NULL,
 CONSTRAINT PK_role PRIMARY KEY ( role_id )
);

CREATE TABLE IF NOT EXISTS UserWorkShift
(
 UserWorkShift_id serial NOT NULL,
 workShift_id     int NOT NULL,
 user_id          int NOT NULL,
 CONSTRAINT PK_userWorkShift PRIMARY KEY ( UserWorkShift_id ),
 CONSTRAINT FK_user FOREIGN KEY ( user_id ) REFERENCES "public"."User" ( user_id ),
 CONSTRAINT FK_workShift FOREIGN KEY ( workShift_id ) REFERENCES WorkShift ( workShift_id )
);

CREATE TABLE IF NOT EXISTS WorkShift
(
 workShift_id serial NOT NULL,
 timeStart    time NOT NULL,
 timeEnd      time NOT NULL,
 "date"         date NOT NULL,
 CONSTRAINT PK_workShift PRIMARY KEY ( workShift_id )
);

CREATE TABLE IF NOT EXISTS Place
(
place_id serial NOT NULL,
"number" varchar(10) NOT NULL,
CONSTRAINT PK_place PRIMARY KEY ( place_id )
);

CREATE TABLE IF NOT EXISTS Food
(
food_id serial NOT NULL,
name varchar(50) NOT NULL,
price varchar(50) NOT NULL,
CONSTRAINT PK_food PRIMARY KEY ( food_id )
);

CREATE TABLE IF NOT EXISTS StatusPayment
(
statusPayment_id serial NOT NULL,
name varchar(50) NOT NULL,
CONSTRAINT PK_statusPayment PRIMARY KEY ( statusPayment_id )
);

CREATE TABLE IF NOT EXISTS StatusOrder
(
statusOrder_id serial NOT NULL,
name varchar(50) NOT NULL,
CONSTRAINT PK_statusOrder PRIMARY KEY ( statusOrder_id )
);

CREATE TABLE IF NOT EXISTS Payment
(
 payment_id       serial NOT NULL,
 statusPayment_id int NOT NULL,
 "sum"              decimal NOT NULL,
 isNonCash        boolean NULL,
 datePayment      timestamp with time zone NOT NULL,
 CONSTRAINT PK_payment PRIMARY KEY ( payment_id ),
 CONSTRAINT FK_statusPayment FOREIGN KEY ( statusPayment_id ) REFERENCES StatusPayment ( statusPayment_id )
);

CREATE TABLE IF NOT EXISTS "Order"
(
 order_Id        serial NOT NULL,
 quantityClients int NOT NULL,
 dateOrder       date NOT NULL,
 statusOrder_id  int NOT NULL,
 place_id        int NOT NULL,
 payment_id      int NULL,
 user_id         int NOT NULL,
 workShift_id    int NOT NULL,
 CONSTRAINT PK_order PRIMARY KEY ( order_Id ),
 CONSTRAINT FK_user FOREIGN KEY ( user_id ) REFERENCES "public"."User" ( user_id ),
 CONSTRAINT FK_workshift FOREIGN KEY ( workShift_id ) REFERENCES WorkShift ( workShift_id ),
 CONSTRAINT FK_payment FOREIGN KEY ( payment_id ) REFERENCES Payment ( payment_id ),
 CONSTRAINT FK_place FOREIGN KEY ( place_id ) REFERENCES Place ( place_id ),
 CONSTRAINT FK_statusOrder FOREIGN KEY ( statusOrder_id ) REFERENCES StatusOrder ( statusOrder_id )
);


CREATE TABLE IF NOT EXISTS FoodOrder
(
foodOrder_id serial NOT NULL,
food_id int NOT NULL,
order_Id int NOT NULL,
CONSTRAINT PK_foodOrder PRIMARY KEY ( foodOrder_id ),
CONSTRAINT FK_food FOREIGN KEY ( food_id ) REFERENCES Food ( food_id ),
CONSTRAINT FK_order FOREIGN KEY ( order_Id ) REFERENCES "Order" ( order_Id )
);



//////////////////////VIEWS//////////////////////////


create schema as WorkShiftUsersS

create or replace view WorkShiftView as
select w.date, concat(w.timestart, ' ', w.timeend) as Time, concat(u.FirstName, ' ', u.SecondName, ' ', u.surname) as FullName, r.name as RoleName, u.user_id, w.workshift_id
FROM userworkshift uw 
join "User" u ON u.user_Id = uw.user_id
join "role" r on r.role_id = u.role_id
join workshift w on w.workshift_id = uw.workshift_Id 

create or replace view OrdersView as
select
    distinct o.order_id,
    o.quantityclients,
    o.dateorder,
    p."number" as NumberPlace,
    u.user_id,
    p2.isnoncash,
    p2.sum,
    s."name" as Status,
    o.workshift_id
from
    "Order" o
    join statusorder s ON o.statusorder_id = s.statusorder_id
    join place p on p.place_id = o.place_id
    join payment p2 on p2.payment_id = o.payment_id
    join "User" u ON u.user_id = o.user_id
    join userworkshift uw on uw.user_id = o.user_id
